<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>com.brian.darwin.acceptance.matching.deployment</artifactId>
	<packaging>jar</packaging>

	<parent>
		<relativePath>../com.brian.darwin.acceptance.parent/pom.xml</relativePath>
		<groupId>com.brian</groupId>
		<artifactId>com.brian.darwin.acceptance.parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<properties>
		<maven.build.timestamp.format>yyMMddHHmmssSS</maven.build.timestamp.format>
		<acceptance.uniqueid>${maven.build.timestamp}</acceptance.uniqueid>
		<acceptance.javahome>${java.home}</acceptance.javahome>
		<acceptance.resttests>**/*Test.java</acceptance.resttests>
		<acceptance.spocktests>**/*Spec.java</acceptance.spocktests>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.brian</groupId>
			<artifactId>com.brian.darwin.acceptance.deployment.common</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.brian</groupId>
			<artifactId>com.brian.darwin.acceptance.server.deployment.common</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse</groupId>
			<artifactId>osgi</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>29.0-jre</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>aopalliance</groupId>
			<artifactId>aopalliance</artifactId>
			<version>1.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.brian</groupId>
			<artifactId>com.brian.darwin.common.security</artifactId>
			<version>${project.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
			</exclusions>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.brian</groupId>
			<artifactId>com.brian.darwin.common.services</artifactId>
			<version>${project.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
			</exclusions>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.brian</groupId>
			<artifactId>com.brian.darwin.common.domain</artifactId>
			<version>${project.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
			</exclusions>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.brian</groupId>
			<artifactId>com.brian.darwin.common.util</artifactId>
			<version>${project.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
			</exclusions>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.brian</groupId>
			<artifactId>com.brian.darwin.common.to</artifactId>
			<version>${project.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
			</exclusions>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.brian</groupId>
			<artifactId>com.brian.darwin.common.configuration</artifactId>
			<version>${project.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
			</exclusions>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.brian</groupId>
			<artifactId>com.brian.darwin.common.configuration.helper</artifactId>
			<version>${project.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
			</exclusions>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.brian</groupId>
			<artifactId>com.brian.darwin.common.tests</artifactId>
			<version>${project.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
			</exclusions>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.brian</groupId>
			<artifactId>com.brian.darwin.server.gigaspaces</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.brian</groupId>
			<artifactId>com.brian.darwin.server.common</artifactId>
			<version>${project.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
			</exclusions>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.brian</groupId>
			<artifactId>com.brian.darwin.server.common.security</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.brian</groupId>
			<artifactId>com.brian.darwin.server.common.authentication</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.brian</groupId>
			<artifactId>com.brian.darwin.server.tests.common</artifactId>
			<version>${project.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
			</exclusions>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.brian</groupId>
			<artifactId>com.brian.darwin.acceptance.common</artifactId>
			<version>${project.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
			</exclusions>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>2.4.21</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.restassured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>2.9.0</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.codehaus.groovy</groupId>
					<artifactId>groovy</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.pholser</groupId>
			<artifactId>junit-quickcheck-core</artifactId>
			<version>0.6</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.pholser</groupId>
			<artifactId>junit-quickcheck-generators</artifactId>
			<version>0.6</version>
		</dependency>
		<dependency>
			<groupId>org.spockframework</groupId>
			<artifactId>spock-core</artifactId>
			<version>1.1-groovy-2.4</version>
			<exclusions>
				<exclusion>
					<groupId>org.codehaus.groovy</groupId>
					<artifactId>groovy-all</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
		  <groupId>com.athaydes</groupId>
		  <artifactId>spock-reports</artifactId>
		  <version>1.3.1</version>
		  <scope>test</scope>
		  <!-- this avoids affecting the version of Groovy/Spock -->
		  <exclusions>
			<exclusion>
			  <groupId>*</groupId>
			  <artifactId>*</artifactId>
			</exclusion>
		  </exclusions>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>ldap-server</id>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>ldap_setup</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>start</goal>
								</goals>
								<configuration>
									<verbose>true</verbose>
									<images>
										<image>
											<alias>ldap</alias>
											<name>455456581940.dkr.ecr.eu-west-1.amazonaws.com/openldap:latest</name>
											<run>
												<wait>
													<tcp>
														<ports>
															<port>389</port>
															<port>636</port>
														</ports>
													</tcp>
													<time>300000</time> <!-- aborts after this timeout (ms) -->
												</wait>
												<ports>
													<port>389:389</port>
													<port>636:636</port>
												</ports>
											</run>
										</image>
									</images>
								</configuration>
							</execution>
							<execution>
								<id>ldap-cleanup</id>
								<phase>post-integration-test</phase>
									<goals>
										<goal>stop</goal>
										<goal>remove</goal>
									</goals>
									<configuration>
										<verbose>true</verbose>
										<images>
											<image>
												<alias>ldap</alias>
												<name>455456581940.dkr.ecr.eu-west-1.amazonaws.com/openldap:latest</name>
												<run>
													<wait>
														<tcp>
															<ports>
																<port>389</port>
																<port>636</port>
															</ports>
														</tcp>
														<time>300000</time> <!-- aborts after this timeout (ms) -->
													</wait>
													<ports>
														<port>389:389</port>
														<port>636:636</port>
													</ports>
												</run>
											</image>
										</images>
									</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>ad-server</id>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>ad-setup</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>start</goal>
								</goals>
								<configuration>
									<verbose>true</verbose>
									<images>
										<image>
											<alias>ad</alias>
											<name>455456581940.dkr.ecr.eu-west-1.amazonaws.com/ad-dc:latest</name>
											<run>
												<wait>
													<log>INFO supervisord started with pid</log>
													<time>300000</time> <!-- aborts after this timeout (ms) -->
												</wait>
												<ports>
													<port>389:389</port>
													<port>636:636</port>
												</ports>
											</run>
										</image>
									</images>
								</configuration>
							</execution>
							<execution>
								<id>ad-cleanup</id>
								<phase>post-integration-test</phase>
									<goals>
										<goal>stop</goal>
										<goal>remove</goal>
									</goals>
									<configuration>
										<verbose>true</verbose>
										<images>
											<image>
												<alias>ad</alias>
												<name>455456581940.dkr.ecr.eu-west-1.amazonaws.com/ad-dc:latest</name>
												<run>
													<wait>
														<log>INFO supervisord started with pid</log>
														<time>300000</time> <!-- aborts after this timeout (ms) -->
													</wait>
													<ports>
														<port>389:389</port>
														<port>636:636</port>
													</ports>
												</run>
											</image>
										</images>
									</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>oracle</id>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>setup</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>start</goal>
								</goals>
							</execution>
							<execution>
								<id>cleanup</id>
								<phase>post-integration-test</phase>
									<goals>
										<goal>stop</goal>
										<goal>remove</goal>
									</goals>
							</execution>
						</executions>
						<configuration>
							<verbose>true</verbose>
							<images>
								<image>
									<name>455456581940.dkr.ecr.eu-west-1.amazonaws.com/oracle/database:prebuilt-19.3.0-se2</name>
									<run>
										<wait>
											<log>DATABASE IS READY TO USE!</log>
											<time>300000</time> <!-- aborts after this timeout (ms) -->
										</wait>
										<ports>
											<port>1521:1521</port>
										</ports>
									</run>
								</image>
							</images>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>mssql</id>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>setup</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>start</goal>
								</goals>
							</execution>
							<execution>
								<id>cleanup</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
									<goal>remove</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<verbose>true</verbose>
							<images>
								<image>
									<name>mcr.microsoft.com/mssql/server:2019-latest</name>
									<run>
										<wait>
											<tcp>
												<ports>
													<port>1433</port>
												</ports>
											</tcp>
											<time>300000</time> <!-- aborts after this timeout (ms) -->
										</wait>
										<env>
											<MSSQL_PID>Express</MSSQL_PID>
											<SA_PASSWORD>${mssql.password}</SA_PASSWORD>
											<ACCEPT_EULA>Y</ACCEPT_EULA>
										</env>
										<ports>
											<port>1433:1433</port>
										</ports>
									</run>
								</image>
							</images>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>mysql</id>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>setup</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>start</goal>
								</goals>
							</execution>
							<execution>
								<id>cleanup</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
									<goal>remove</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<verbose>true</verbose>
							<images>
								<image>
									<name>mysql:5.6</name>
									<run>
										<wait>
											<tcp>
												<ports>
													<port>3306</port>
												</ports>
											</tcp>
											<time>300000</time> <!-- aborts after this timeout (ms) -->
										</wait>
										<env>
											<MYSQL_ROOT_PASSWORD>${mysql.password}</MYSQL_ROOT_PASSWORD>
										</env>
										<ports>
											<port>3306:3306</port>
										</ports>
									</run>
								</image>
							</images>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>customer-data</id>
			<activation>
				<property>
					<name>acceptance.harness</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>unpack-customerdata</id>
								<phase>validate</phase>
								<goals>
									<goal>unpack</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>com.gresham</groupId>
											<artifactId>com.gresham.darwin.acceptance.customerdata</artifactId>
											<version>${customerdata.version}</version>
											<type>zip</type>
											<overWrite>true</overWrite>
											<outputDirectory>${project.build.directory}/customerdata/</outputDirectory>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-customerdata1</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.basedir}/src/test/resources/harness/${acceptance.harness}/ctcConfiguration/</outputDirectory>
									<resources>
										<resource>
											<directory>${project.build.directory}/customerdata/${acceptance.harness}/config/ctcConfiguration</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
							<execution>
								<id>copy-customerdata2</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.basedir}/src/test/resources/harness/${acceptance.harness}/static/</outputDirectory>
									<resources>
										<resource>
											<directory>${project.build.directory}/customerdata/${acceptance.harness}/config/static</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
							<execution>
								<id>copy-customerdata3</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.basedir}/src/test/resources/${acceptance.harness}</outputDirectory>
									<resources>
										<resource>
											<directory>${project.build.directory}/customerdata/${acceptance.harness}/data/matching</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
							<execution>
								<id>copy-customerdata4</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.basedir}/src/test/java/com/gresham/darwin/acceptance/matching/deployment/runners/</outputDirectory>
									<resources>
										<resource>
											<directory>${project.build.directory}/customerdata/${acceptance.harness}/runners/matching</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
							<execution>
								<id>copy-customerdata5</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.basedir}/src/test/resources/stories/customer/${acceptance.harness}/</outputDirectory>
									<resources>
										<resource>
											<directory>${project.build.directory}/customerdata/${acceptance.harness}/stories/matching</directory>
										</resource>
									</resources>
							</configuration>
						</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>skipRestTests</id>
			<activation>
				<property>
					<name>skipRestTests</name>
				</property>
			</activation>
			<properties>
				<acceptance.resttests></acceptance.resttests>
			</properties>
		</profile>
		<profile>
			<id>skipSpockTests</id>
			<activation>
				<property>
					<name>skipSpockTests</name>
				</property>
			</activation>
			<properties>
				<acceptance.spocktests></acceptance.spocktests>
			</properties>
		</profile>
		<profile>
			<id>deployment-matching</id>
			<properties></properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>add-mysql-connector</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>mysql</groupId>
											<artifactId>mysql-connector-java</artifactId>
											<version>${mysql.connector.version}</version>
											<type>jar</type>
											<outputDirectory>${project.build.directory}/ctc/ctc/ctc${ctcserver.version}/lib/ext</outputDirectory>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
							<execution>
								<id>setup-test-server</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>unpack</goal>
								</goals>
								<configuration>
									<scope>test</scope>
									<artifactItems>
										<artifactItem>
											<groupId>com.gresham</groupId>
											<artifactId>com.gresham.darwin.distribution</artifactId>
											<classifier>ctc_core</classifier>
											<type>zip</type>
											<version>${project.version}</version>
											<outputDirectory>${project.build.directory}</outputDirectory>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
							<execution>
								<id>add-bhn-plugin</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<scope>test</scope>
									<artifactItems>
										<artifactItem>
											<groupId>com.gresham.ctc.api</groupId>
											<artifactId>com.gresham.ctc.bhn.plugin</artifactId>
											<version>0.0.7-SNAPSHOT</version>
											<classifier>plugin</classifier>
											<type>zip</type>
											<outputDirectory>${project.basedir}/src/test/resources/ctcConfiguration/plugins</outputDirectory>
											<destFileName>BHNCryptoPlugin.zip</destFileName>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>setup-test-environment</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
 										<property name="acceptance.server.log.level" value="${server.log.level}" />
										<ant antfile="pom.build.xml" />
									</target>
								</configuration>
							</execution>
							<execution>
								<id>cleanup-test-environment</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<ant antfile="pom.build.xml" target="test.acceptance.cleanup" />
									</target>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>ant-contrib</groupId>
								<artifactId>ant-contrib</artifactId>
								<version>1.0b3</version>
								<exclusions>
									<exclusion>
										<groupId>ant</groupId>
										<artifactId>ant</artifactId>
									</exclusion>
								</exclusions>
							</dependency>
							<dependency>
								<groupId>org.apache.ant</groupId>
								<artifactId>ant-nodeps</artifactId>
								<version>1.8.1</version>
							</dependency>
						</dependencies>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<testClassesDirectory>${project.build.testOutputDirectory}</testClassesDirectory>
						</configuration>
						<executions>
							<execution>
								<id>default-test</id>
								<phase>integration-test</phase>
								<goals>
									<goal>test</goal>
								</goals>
								<configuration>
									<skipTests>false</skipTests>
									<testFailureIgnore>true</testFailureIgnore>
									<excludes>
										<exclude>**/*DeployStory.java</exclude>
									</excludes>
									<includes>
										<include>**/*Story.java</include>
										<include>${acceptance.resttests}</include>
										<include>${acceptance.spocktests}</include>
									</includes>
									<argLine>-Xms40m -Xmx4096m
										-Dctc.acceptance.properties=${project.build.directory}/config.properties
										-DMetaFilters=${acceptance.metafilters}
										-Dlogback.configurationFile=${acceptance.test.logback.configurationFile}
										 ${failsafeArgLine}
										</argLine>
									<appArgLine>-clearPersistedState</appArgLine>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<compilerVersion>1.8</compilerVersion>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<skip>false</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.gmavenplus</groupId>
				<artifactId>gmavenplus-plugin</artifactId>
				<version>1.5</version>
				<executions>
					<execution>
						<goals>
							<goal>addSources</goal>
							<goal>addTestSources</goal>
							<goal>compile</goal>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>
